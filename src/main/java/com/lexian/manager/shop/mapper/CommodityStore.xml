<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lexian.manager.shop.dao.CommodityStoreDao">
	<select id="getCommdityByStoreNoPage" resultType="CommodityStore"
		parameterType="java.util.Map">
		select
		commodity_store.id,
		commodity_store.commodity_no as commodityNo,commodity_price as
		commodotyPrice,real_price as
		realPrice,commodity_amont as
		commodityAmont,type,name
		from commodity_store,commodity
		where
		commodity_store.commodity_no=commodity.commodity_no
		AND store_no=#{storeNo,jdbcType=VARCHAR}
	</select>
	<update id="updateCommdityStore" parameterType="CommodityStore">
		update commodity_store
		<set>
			<if test="commodotyPrice !=null">
				commodity_price=#{commodotyPrice,jdbcType=DOUBLE},
			</if>
			<if test="realPrice !=null">
				real_price=#{realPrice,jdbcType=DOUBLE},
			</if>
			<if test="commodityAmont !=null">
				commodity_amont=#{commodityAmont,jdbcType=INTEGER},
			</if>
			<if test="type !=null">
				type=#{type,jdbcType=INTEGER}
			</if>
		</set>
		where id=#{id,jdbcType=INTEGER}
	</update>
	<insert id="addCommodityStore" parameterType="CommodityStore">
	insert into 
	commodity_store(commodity_no,store_no,type)
	values(
	(select commodity_no from commodity where 
	commodity_no=#{commodityNo,jdbcType=VARCHAR}),
	(select store_no from store where store_no=#{storeNo,jdbcType=VARCHAR}),
	#{ type,jdbcType=INTEGER}
	)
	</insert>
	<insert id="registCommodityStore" parameterType="CommodityStore">
	insert into 
	commodity_store(commodity_no,store_no,type)
	values(
	(select commodity_no from commodity where 
	commodity_no=#{commodityNo,jdbcType=VARCHAR}),
	(select store_no from store where store_no=#{storeNo,jdbcType=VARCHAR}),
	#{ type,jdbcType=INTEGER})
	</insert>
	<select id="getCommodityByCategoryId" resultType="Commodity">
		SELECT DISTINCT c.id ,c.name ,c.commodity_no as commodityNo,
		c.pictureurl as pictureUrl,c.createtime as createTime,
		c.updateTime as updateTime,c.introduce
 		FROM commodity c,commodity_store cs
 		 WHERE c.commodity_no=cs.commodity_no AND 
 		 c.category_id=#{categoryId,jdbcType=VARCHAR}
  		AND c.commodity_no NOT IN (
		SELECT commodity_no FROM commodity_store WHERE 
		store_no=#{storeNo,jdbcType=VARCHAR})
	</select>
	
</mapper>