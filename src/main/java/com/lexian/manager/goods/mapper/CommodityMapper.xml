<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lexian.manager.goods.dao.CommodityDao">

    <resultMap type="Commodity" id="CommodityPicture">
        <result column="id" property="id" jdbcType="INTEGER"/>

        <result column="commodity_no" property="commodityNo"
                jdbcType="VARCHAR"/>

        <result column="name" property="name" jdbcType="VARCHAR"/>

        <result column="category_id" property="categoryId"
                jdbcType="INTEGER"/>

        <result column="introduce" property="introduce"
                jdbcType="VARCHAR"/>

        <result column="detailed" property="detailed" jdbcType="VARCHAR"/>

        <result column="pictureurl" property="pictureUrl" jdbcType="VARCHAR"/>

        <result column="createtime" property="createTime"
                jdbcType="TIMESTAMP"/>

        <result column="updatetime" property="updateTime"
                jdbcType="TIMESTAMP"/>

        <result column="states" property="states" jdbcType="INTEGER"/>

        <association property="categoryView"
                     javaType="com.lexian.manager.goods.bean.CategoryView">
            <result column="firstid" property="firstId" jdbcType="INTEGER"/>
            <result column="firstname" property="firstName"
                    jdbcType="VARCHAR"/>
            <result column="secondid" property="secondId" jdbcType="INTEGER"/>
            <result column="secondname" property="secondName"
                    jdbcType="VARCHAR"/>
            <result column="thirdid" property="thirdId" jdbcType="INTEGER"/>
            <result column="thirdname" property="thirdName"
                    jdbcType="VARCHAR"/>
        </association>

        <collection property="commodtySpecs" ofType="CommoditySpec">

            <result column="spec_group" property="specGroup"
                    jdbcType="VARCHAR"/>
            <result column="spec_name" property="specName" jdbcType="INTEGER"/>
        </collection>

        <collection property="commodityPicuture" ofType="java.lang.String">

            <result column="picture_url" property="commodityPicuture"
                    jdbcType="VARCHAR"/>

        </collection>
    </resultMap>


    <select id="getCommodityById" resultMap="CommodityPicture">

		SELECT DISTINCT
		c.id,c.commodity_no,c.name,c.category_id,c.introduce,c.detailed,
		c.pictureurl,c.createtime,c.updatetime,c.states,cp.picture_url,
		cs.spec_group,cs.spec_name,cv.firstid,cv.firstname,cv.secondid,
		cv.secondname,cv.thirdid,cv.thirdname
		FROM commodity AS c,commodity_picture AS cp,
		commodity_spec AS cs,categoryview AS cv
		WHERE c.commodity_no=cp.commodity_no
		AND cs.commodity_no=c.commodity_no
		AND cs.commodity_no=cp.commodity_no
		AND c.category_id=cv.thirdid
		AND c.id=#{id,jdbcType=INTEGER}
	</select>

    <select id="getCommodityByCategoryId" resultType="Commodity">
		select
		id,commodity_no as commodityNo,name,introduce,detailed,pictureurl as
		pictureUrl,createtime ascreateTime,updateTime as updateTime,states
		from commodity
		where
		category_id=#{categoryId,jdbcType=INTEGER}

	</select>

    <select id="getCommodityByCommodityNo" resultType="Commodity">
		select
		id,commodity_no as commodityNo,name,category_id as
		categoryId,introduce,detailed,pictureurl as pictureUrl,
		createtime as createTime,updateTime as updateTime,states
		from commodity
		where
		commodity_no=#{commodityNo,jdbcType=VARCHAR}

	</select>

    <select id="getCommoditiesPage" resultType="Commodity">
		select
		id,commodity_no
		as commodityNo,name,category_id as
		categoryId,introduce,detailed,pictureurl as pictureUrl,
		createtime as
		createTime,updatetime as updateTime,states
		from commodity
		order by updatetime DESC

	</select>

    <insert id="addCommodity" parameterType="Commodity">

		INSERT INTO commodity
		(commodity_no, NAME, category_id,
		introduce,createtime,updatetime)
		VALUES (
		#{commodityNo,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		(SELECT id
		FROM category WHERE id=#{categoryId,jdbcType=INTEGER}),
		#{introduce,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP});
	</insert>

    <update id="updateCommodity" parameterType="Commodity">
        update commodity
        <set>
            <if test="name != null">
                name=#{name,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id=(SELECT id FROM category WHERE
                id=#{categoryId,jdbcType=INTEGER}),
            </if>
            <if test="introduce != null">
                introduce=#{introduce,jdbcType=VARCHAR},
            </if>
            <if test="detailed != null">
                detailed=#{detailed,jdbcType=VARCHAR},
            </if>
            <if test="pictureUrl != null">
                pictureurl=#{pictureUrl,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                updatetime=#{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="states != null">
                states=#{states,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteCommodityPicture">

		delete
		from commodity_picture
		where
		commodity_no=#{commodityNo,jdbcType=VARCHAR}

	</delete>

    <insert id="addCommodityPicture">
		INSERT INTO
		commodity_picture(commodity_no,picture_url)
		VALUES(
		(SELECT commodity_no
		FROM commodity WHERE commodity_no=#{commodityNo,jdbcType=VARCHAR}),
		#{pictureUrl,jdbcType=VARCHAR}
		)
	</insert>

    <insert id="addCommoditySpec">
		INSERT INTO
		commodity_spec(commodity_no,spec_group,spec_name,states)
		VALUES(
		(SELECT commodity_no
		FROM commodity WHERE
		commodity_no=#{commodityNo,jdbcType=VARCHAR}),
		#{specGroup,jdbcType=VARCHAR},
		#{specName,jdbcType=VARCHAR},
		#{states,jdbcType=INTEGER}
		)
	</insert>

    <delete id="deleteCommoditySpec">

		delete
		from commodity_spec
		where
		commodity_no=#{commodityNo,jdbcType=VARCHAR}
	</delete>
</mapper>